---
import { getCollection, getEntry } from "astro:content";
import PhotoLayout from "../../layouts/PhotoLayout.astro";
import ArticleTitle from "../../components/ArticleTitle.astro";
import Header from "../../components/Header.astro";
import Spacer from "../../components/Spacer.astro";
import BackToLink from "../../components/BackToLink.astro";
import ThemeToggle from "../../components/ThemeToggle.astro";

const { slug } = Astro.params;
if (!slug) throw new Error("Slug not found");
const photo = await getEntry("photos", slug);

if (!photo) throw new Error("No photo found for this slug");
const { Content } = await photo.render();

const photos = await getCollection("photos");
const sortedPhotos =
  photos
    ?.filter((p) => !!p.data.published)
    ?.sort(
      (a, b) =>
        b.data.date.getTime() - a.data.date.getTime()
    ) ?? [];

const currentIndex = sortedPhotos.findIndex((p) => p.slug === slug);

var currentPhotos = sortedPhotos.slice(0, 10);

// Generate static pages
export async function getStaticPaths() {
  const photos = await getCollection("photos");
  return photos.map((photo) => ({ params: { slug: photo.slug } }));
}
---

<PhotoLayout title={photo.data.title} description={photo.data.description}>
  <header class="photo-layout-header">
    <ThemeToggle />
    <Header showTitle={true} />
    <ArticleTitle
      heading={photo.data.title}
      subheading={photo.data.description}
    />
  </header>
  <div class={`photo-outer-container ${photo.data.orientation}`}>
    <div class="photo-inner-container">
      <img src={photo.data.photo} alt={photo.data.description} />
    </div>
  </div>
  <div class="photo-description">
    <Content />
    {
      currentPhotos.length > 1 && (
        <>
          <Spacer />
          <section class="writing-list">
            <h3>Latest Photos</h3>
            <ul>
              {currentPhotos.map(async (f, i) => {
                const className = i === currentIndex ? "is-current" : "";
                return (
                  <li class={className}>
                    {i !== currentIndex ? (
                      <a href={`/photos/${f.slug}`}>{f.data.title}</a>
                    ) : (
                      <span class="current-title">{f.data.title}</span>
                    )}
                    <hr />
                    <em>({f.data.date.toISOString()})</em>
                  </li>
                );
              })}
            </ul>
          </section>
        </>
      )
    }
    <Spacer />
    <BackToLink text="Back to Photos" href="/photos" />
  </div>
</PhotoLayout>
